# Generated by Django 5.0.3 on 2024-04-08 22:37

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recruit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True)),
                ('rank', models.CharField(blank=True, max_length=255, null=True, verbose_name='Rank')),
                ('name', models.CharField(default='', max_length=255)),
                ('arm', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arm')),
                ('blood_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Blood Type')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit')),
                ('current_job', models.CharField(blank=True, max_length=255, null=True, verbose_name='current_job')),
                ('college', models.CharField(blank=True, max_length=255, null=True, verbose_name='college')),
                ('home_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='home_phone')),
                ('email_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='email_address')),
                ('number_of_current_spouses', models.IntegerField(default=0, verbose_name='number_of_current_spouses')),
                ('men', models.IntegerField(default=0, verbose_name='Men')),
                ('women', models.IntegerField(default=0, verbose_name='Women')),
                ('spouse_date', models.DateField(blank=True, null=True, verbose_name='spouce_date')),
                ('number_of_past_spouses', models.IntegerField(default=0, verbose_name='number_of_past_spouces')),
                ('date_of_break_up', models.DateField(blank=True, null=True, verbose_name='date of break up')),
                ('religion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Religion')),
                ('national_number', models.CharField(blank=True, max_length=14, null=True, verbose_name='National Number')),
                ('date_of_graduation', models.DateField(blank=True, null=True, verbose_name='Date of Graduation')),
                ('education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Education')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('birth_location', models.CharField(blank=True, default='', max_length=255)),
                ('marital_status', models.CharField(blank=True, default='', max_length=255)),
                ('number_of_children', models.PositiveIntegerField(default=0)),
                ('residence', models.CharField(blank=True, max_length=255, null=True, verbose_name='Residence')),
                ('triple_digit', models.CharField(blank=True, default='', max_length=22)),
                ('mobile_number', models.CharField(blank=True, default='', max_length=255)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2024, 4, 8, 22, 37, 3, 975600, tzinfo=datetime.timezone.utc))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
